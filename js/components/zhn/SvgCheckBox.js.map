{"version":3,"sources":["../../../src/components/zhn/SvgCheckBox.jsx"],"names":["useCallback","hooks","CL","S","DIV","transform","SVG","display","SvgChecked","stroke","C","BLANK","SvgCheckBox","style","checkedRestStroke","INPUT_BLUE","checkedRestFill","checkedColor","BG_GREY","value","onCheck","onUnCheck","_hClick","_hKeyDown","evt","preventDefault","_restStroke","INPUT_GREY","_restFill"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;;;IAEQA,W,GAAgBC,iB,CAAhBD,W;AAER,IAAME,EAAE,GAAG,KAAX;AAEA,IAAMC,CAAC,GAAG;AACRC,EAAAA,GAAG,EAAE;AACHC,IAAAA,SAAS,EAAE;AADR,GADG;AAIRC,EAAAA,GAAG,EAAE;AACHC,IAAAA,OAAO,EAAE;AADN;AAJG,CAAV;;AASA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,MAAGC,MAAH,QAAGA,MAAH;AAAA,SACjB;AACI,IAAA,CAAC,EAAC,mBADN;AAEI,oBAAa,GAFjB;AAGI,sBAAe,OAHnB;AAII,IAAA,MAAM,EAAEA,MAJZ;AAKI,IAAA,IAAI,EAAEC,kBAAEC;AALZ,IADiB;AAAA,CAAnB;;AAUA,IAAMC,WAAW,GAAG,SAAdA,WAAc,QAQd;AAAA,MAPJC,KAOI,SAPJA,KAOI;AAAA,oCANJC,iBAMI;AAAA,MANJA,iBAMI,sCANcJ,kBAAEK,UAMhB;AAAA,oCALJC,eAKI;AAAA,MALJA,eAKI,sCALYN,kBAAEK,UAKd;AAAA,iCAJJE,YAII;AAAA,MAJJA,YAII,mCAJSP,kBAAEQ,OAIX;AAAA,MAHJC,KAGI,SAHJA,KAGI;AAAA,4BAFJC,OAEI;AAAA,MAFJA,OAEI,8BAFI,YAAI,CAAE,CAEV;AAAA,8BADJC,SACI;AAAA,MADJA,SACI,gCADM,YAAI,CAAE,CACZ;;AACJ,MAAMC,OAAO,GAAGtB,WAAW,CAAC,YAAM;AAC9B,QAAI,CAACmB,KAAL,EAAY;AAAEC,MAAAA,OAAO;AAAI,KAAzB,MACK;AAAEC,MAAAA,SAAS;AAAI;AACvB,GAH0B,EAGxB,CAACF,KAAD,EAAQC,OAAR,EAAiBC,SAAjB,CAHwB,CAA3B;AAAA,MAIEE,SAAS,GAAGvB,WAAW,CAAC,UAAAwB,GAAG,EAAI;AAC7B,QAAI,4BAAWA,GAAX,CAAJ,EAAoB;AAClBA,MAAAA,GAAG,CAACC,cAAJ;;AACAH,MAAAA,OAAO;AACR;AACF,GALsB,EAKpB,CAACA,OAAD,CALoB,CAJzB;;AAUA,MAAMI,WAAW,GAAGP,KAAK,GACrBL,iBADqB,GACDJ,kBAAEiB,UAD1B;AAAA,MAEEC,SAAS,GAAGT,KAAK,GACfH,eADe,GACGN,kBAAEC,KAHxB;;AAIA,SACE;AACG,IAAA,IAAI,EAAC,UADR;AAEG,IAAA,QAAQ,EAAC,GAFZ;AAGG,oBAAcQ,KAHjB;AAIG,IAAA,SAAS,EAAEjB,EAJd;AAKG,IAAA,KAAK,gCAAOC,CAAC,CAACC,GAAT,EAAiBS,KAAjB,CALR;AAMG,IAAA,OAAO,EAAES,OANZ;AAOG,IAAA,SAAS,EAAEC,SAPd;AAAA,cASE;AACE,MAAA,OAAO,EAAC,WADV;AACsB,MAAA,KAAK,EAAC,MAD5B;AACmC,MAAA,MAAM,EAAC,MAD1C;AAEE,MAAA,mBAAmB,EAAC,MAFtB;AAE6B,MAAA,KAAK,EAAC,4BAFnC;AAGE,MAAA,KAAK,EAAEpB,CAAC,CAACG,GAHX;AAAA,iBAKE;AACG,QAAA,CAAC,EAAC,GADL;AACS,QAAA,CAAC,EAAC,GADX;AAEG,QAAA,MAAM,EAAC,IAFV;AAEe,QAAA,KAAK,EAAC,IAFrB;AAGG,wBAAa,GAHhB;AAGoB,QAAA,EAAE,EAAC,GAHvB;AAIG,QAAA,MAAM,EAAEoB,WAJX;AAKG,QAAA,IAAI,EAAEE;AALT,QALF,EAYIT,KAAK,GACF,qBAAC,UAAD;AAAY,QAAA,MAAM,EAAEF;AAApB,QADE,GAEF,IAdP;AAAA;AATF,IADF;AA6BD,CApDD;;eAsDeL,W","sourcesContent":["import hooks from '../hooks'\r\n\r\nimport isKeyEnter from './isKeyEnter'\r\nimport C from '../styles/Color';\r\n\r\nconst { useCallback } = hooks\r\n\r\nconst CL = 'chb';\r\n\r\nconst S = {\r\n  DIV: {\r\n    transform: 'scale(1.2)'\r\n  },\r\n  SVG: {\r\n    display: 'inline-block'\r\n  }\r\n};\r\n\r\nconst SvgChecked = ({ stroke }) => (\r\n  <path\r\n      d=\"M 2,5 L 8,14 14,1\"\r\n      stroke-width=\"2\"\r\n      stroke-linecap=\"round\"\r\n      stroke={stroke}\r\n      fill={C.BLANK}\r\n  />\r\n);\r\n\r\nconst SvgCheckBox = ({\r\n  style,\r\n  checkedRestStroke=C.INPUT_BLUE,\r\n  checkedRestFill=C.INPUT_BLUE,\r\n  checkedColor=C.BG_GREY,\r\n  value,\r\n  onCheck=()=>{},\r\n  onUnCheck=()=>{}\r\n}) => {\r\n  const _hClick = useCallback(() => {\r\n      if (!value) { onCheck() }\r\n      else { onUnCheck() }\r\n  }, [value, onCheck, onUnCheck])\r\n  , _hKeyDown = useCallback(evt => {\r\n      if (isKeyEnter(evt)){\r\n        evt.preventDefault()\r\n        _hClick()\r\n      }\r\n    }, [_hClick]);\r\n  const _restStroke = value\r\n    ? checkedRestStroke : C.INPUT_GREY\r\n  , _restFill = value\r\n    ? checkedRestFill : C.BLANK;\r\n  return (\r\n    <div\r\n       role=\"checkbox\"\r\n       tabIndex=\"0\"\r\n       aria-checked={value}\r\n       className={CL}\r\n       style={{ ...S.DIV, ...style }}\r\n       onClick={_hClick}\r\n       onKeyDown={_hKeyDown}\r\n    >\r\n      <svg\r\n        viewBox=\"0 0 16 16\" width=\"100%\" height=\"100%\"\r\n        preserveAspectRatio=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\r\n        style={S.SVG}\r\n      >\r\n        <rect\r\n           x=\"1\" y=\"1\"\r\n           height=\"14\" width=\"14\"\r\n           stroke-width=\"2\" rx=\"3\"\r\n           stroke={_restStroke}\r\n           fill={_restFill}\r\n        />\r\n        { value\r\n           ? <SvgChecked stroke={checkedColor} />\r\n           : null\r\n        }\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SvgCheckBox\r\n"],"file":"SvgCheckBox.js"}