{"version":3,"sources":["../../../src/components/zhn/InputText.jsx"],"names":["useState","hooks","useRef","useCallback","useEffect","useImperativeHandle","S","INPUT_TEXT","display","color","height","width","paddingLeft","marginLeft","marginRight","fontSize","fontWeight","backgroundColor","border","outline","boxShadow","DF_TEXT_PROPS","autoCorrect","autoCapitalize","spellCheck","translate","maxLength","InputText","style","type","name","initValue","inputId","step","min","max","innerRef","onChange","onEnter","value","setValue","_refName","_handleInputChange","event","target","_handleKeyDown","keyCode","_textProps","_numberProps","current"],"mappings":"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","sourcesContent":["import hooks from '../hooks'\r\n\r\nimport crId from '../../utils/crId';\r\n\r\nconst {\r\n  useState, useRef, useCallback,\r\n  useEffect, useImperativeHandle\r\n} = hooks;\r\n\r\nconst S = {\r\n  INPUT_TEXT : {\r\n    display: 'inline',\r\n    color: 'green',\r\n    height: 32,\r\n    width: 45,\r\n    paddingLeft: 5,\r\n    marginLeft : 5,\r\n    marginRight : 5,\r\n    fontSize: '16px',\r\n    fontWeight: 'bold',\r\n    backgroundColor: '#e1e1cb',\r\n    border: 'medium none',\r\n    outline: 'medium none',\r\n    boxShadow: '0 2px 2px 0 rgba(0,0,0,0.3), 0 0 0 1px rgba(0,0,0,0.1)'\r\n  }\r\n};\r\n\r\nconst DF_TEXT_PROPS = {\r\n  autoCorrect: \"off\",\r\n  autoCapitalize: \"off\",\r\n  spellCheck: false,\r\n  translate: false,\r\n  maxLength: 25\r\n};\r\n\r\nconst InputText = ({\r\n  style,\r\n  type='string',\r\n  name,\r\n  initValue='',\r\n  inputId,\r\n  step=1,\r\n  min=-10,\r\n  max=10,\r\n  innerRef,\r\n  onChange=()=>{},\r\n  onEnter=()=>{}\r\n}) => {\r\n  const [value, setValue] = useState()\r\n  , _refName = useRef(name || crId())\r\n  , _handleInputChange = useCallback((event) => {\r\n      const value = event.target.value;\r\n      setValue(value)\r\n      onChange(value)\r\n    }, [])\r\n  , _handleKeyDown = useCallback((event) => {\r\n      if (event.keyCode === 13){\r\n        onEnter(event.target.value)\r\n      }\r\n    }, []);\r\n\r\n  useEffect(() => {\r\n    setValue(initValue)\r\n  }, [inputId])\r\n\r\n  useImperativeHandle(innerRef, () => ({\r\n    setValue\r\n  }))\r\n\r\n  const  _textProps = type === 'text'\r\n    ? DF_TEXT_PROPS : void 0\r\n  , _numberProps = type === 'number'\r\n      ? {\r\n        min, max, step\r\n      } : void 0;\r\n\r\n  return (\r\n    <input\r\n      type={type}\r\n      name={_refName.current}\r\n      {..._textProps}\r\n      {..._numberProps}\r\n      style={{...S.INPUT_TEXT, ...style}}\r\n      value={value}\r\n      //onChange={_handleInputChange}\r\n      onInput={_handleInputChange}\r\n      onKeyDown={_handleKeyDown}\r\n    />\r\n  );\r\n};\r\n\r\nexport default InputText\r\n"],"file":"InputText.js"}